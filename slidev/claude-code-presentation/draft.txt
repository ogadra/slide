Claude Codeを使って
- 大興奮
- 価値観変わった

## しない話

環境構築
Claude Codeの活用方法
プロンプトの工夫

## なぜClaude Codeは私を興奮させるのか？
- 広範囲におけるコード編集
  - 人間が編集箇所を見つけるより速い
  - 人間がコードをタイプするより速い
- 自律的なエラー解消
  - エラーメッセージをコピペするより速い
- （実質）定額使い放題
  - 書いて、捨てて、書いて、捨てる
  - 「API料金が無駄になる」恐れからの開放

## 能力はどんなもん

よく「ジュニアレベルのエンジニア」と呼ばれているが

1. よく知られたライブラリ・フレームワークは書ける
  - ネットにありふれた書き方をする
  - **≠ ベストプラクティス**
    - ReactならuseStateを積極的に使う
2. 環境構築
  - 必要なライブラリを（勝手に）インストール
  - 「ワークスペース分割して」も（一応）できる
3. エラー解消
  - よく見るやつは自律的に解消
  - （マイナー）ライブラリ固有ののエラーは厳しい

## 何がすごいか

はやい！！！


## 人間が構築する際のボトルネックがみるみる剥がれていく

- 編集範囲への移動
- タイピング
- エラー解消
- コマンド操作

-> 最後のボトルネックは人間による確認

## 未来は？

> Cline 型コーディングが整備され、万人に開放され、プラクティスが整理されたとき、適応している側の人類でないと、単に生産性という面で生き残れない。

by mizchi

生産性が桁違いに違う。20ドルプランでいいので1回触ってみると、シンギュラリティを感じられます。


